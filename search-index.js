var searchIndex = JSON.parse('{\
"vodozemac":{"doc":"Build Status codecov License Docs - Main Docs - Stable","tn":["Base64","Base64","Base64","Base64Error","Curve25519PublicKey","Decode","DecodeError","Decryption","Ed25519PublicKey","Ed25519SecretKey","Ed25519Signature","InvalidKey","InvalidKeyLength","InvalidMacLength","InvalidSession","InvalidVersion","KeyError","KeyId","LENGTH","LENGTH","LENGTH","LibolmUnpickleError","MessageTooShort","MessageType","MissingVersion","MissingVersion","NonContributoryKey","ProtoBufError","PublicKey","Signature","Signature","Signature","SignatureError","Version","as_bytes","as_bytes","as_bytes","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","default","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_base64","from_base64","from_base64","from_base64","from_bytes","from_slice","from_slice","from_slice","from_slice","hash","hash","into","into","into","into","into","into","into","into","into","megolm","ne","ne","ne","new","olm","partial_cmp","public_key","sas","serialize","serialize","serialize","serialize","sign","source","source","source","source","to_base64","to_base64","to_base64","to_base64","to_base64","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_vec","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","verify","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","0","0","0","0","0","0","0","0","1","1","0","0","0","0","0","0","0","0","1","0","0","0","0","Base64","CorruptedPickle","CorruptedPickle","DecodeError","DecryptedMessage","DecryptionError","ExportedSessionKey","GroupSession","GroupSessionPickle","GroupSessionPickledJSON","GroupSessionUnpicklingError","InboundGroupSession","InboundGroupSessionPickle","InboundGroupSessionPickledJSON","InboundGroupSessionUnpicklingError","InvalidCiphertext","InvalidInitialRatchet","InvalidLatestRatchet","InvalidMAC","InvalidRatchet","InvalidSigningPublicKey","MegolmMessage","PublicKey","Read","SessionCreationError","SessionKey","Signature","Signature","UnknownMessageIndex","Version","advance_to","as_ref","as_ref","as_str","as_str","as_str","as_str","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","ciphertext","clone","clone_into","decrypt","default","deref","deref","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","encrypt","eq","export_at","first_known_index","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_base64","from_bytes","from_libolm_pickle","import","into","into","into","into","into","into","into","into","into","into","into","into","into","into","message_index","message_index","message_index","ne","new","new","pickle","pickle","pickle_to_json_string","pickle_to_json_string","plaintext","serialize","serialize","serialize","serialize","session_id","session_id","session_key","source","source","source","source","to_base64","to_bytes","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unpickle","unpickle","unpickle","unpickle","unpickle_from_json_str","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","zeroize","zeroize","zeroize","zeroize","0","0","0","0","0","1","0","0","0","0","0","0","0","0","0","0","0","1","Account","AccountPickle","AccountPickledJSON","AccountUnpicklingError","Base64","CorruptedPickle","DecodeError","DecryptionError","IdentityKeys","InboundCreationResult","InvalidCiphertext","InvalidMAC","InvalidSigningKey","Message","MessageType","MissingMessageKey","Normal","Normal","OlmMessage","PreKey","PreKey","PreKeyMessage","Session","SessionPickle","SessionPickledJSON","TooBigMessageGap","as_ref","as_ref","as_str","as_str","base_key","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chain_index","ciphertext","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","create_inbound_session","create_outbound_session","curve25519","curve25519_key","curve25519_key_encoded","decrypt","default","deref","deref","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","ed25519","ed25519_key","ed25519_key_encoded","encrypt","eq","eq","eq","eq","eq","fallback_key","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","forget_fallback_key","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_base64","from_base64","from_bytes","from_bytes","from_libolm_pickle","from_libolm_pickle","from_parts","generate_fallback_key","generate_one_time_keys","identity_key","identity_keys","into","into","into","into","into","into","into","into","into","into","into","into","into","into","mark_keys_as_published","max_number_of_one_time_keys","message","message","message_type","ne","ne","ne","ne","new","one_time_key","one_time_keys","one_time_keys_encoded","pickle","pickle","pickle_to_json_string","pickle_to_json_string","plaintext","ratchet_key","remove_one_time_key","serialize","serialize","serialize","serialize","serialize","serialize","session","session_id","sign","source","source","to_base64","to_base64","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_parts","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unpickle","unpickle","unpickle","unpickle","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","zeroize","zeroize","0","0","0","0","0","0","0","0","1","0","0","EstablishedSas","InvalidCount","Mac","Mac","Sas","SasBytes","SasError","as_bytes","as_bytes","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes","bytes_raw","calculate_mac","calculate_mac_invalid_base64","clone","clone","clone_into","clone_into","decimals","default","diffie_hellman","diffie_hellman_with_raw","emoji_indices","eq","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_base64","from_slice","into","into","into","into","into","into","ne","new","our_public_key","public_key","public_key_encoded","source","their_public_key","to_base64","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","verify_mac","vzip","vzip","vzip","vzip","vzip","vzip","0"],"q":["vodozemacvodozemac::DecodeError","","","","","","","","","","vodozemac::KeyError","","","vodozemac::LibolmUnpickleError","","","","","","vodozemac::SignatureError","","vodozemac::megolmvodozemac::megolm::DecryptionError","","","","","","vodozemac::megolm::GroupSessionUnpicklingError","","vodozemac::megolm::InboundGroupSessionUnpicklingError","","","","vodozemac::megolm::SessionCreationError","","","","","","vodozemac::olm","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","vodozemac::olm::AccountUnpicklingError","","vodozemac::olm::DecryptionError","","","","","","","vodozemac::olm::OlmMessage","","vodozemac::sas","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","vodozemac::sas::SasError"],"d":["The signature wasn’t valid base64.","","","","","","","","","An Ed25519 secret key, used to create digital signatures.","","","","","","","Error type describing failures that can happen when we try …","","","","","","","","","","At least one of the keys did not have contributory …","","","The signature failed to be verified.","","","Error type describing signature verification failures.","","View this public key as a byte array.","Get the byte representation of the secret key.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","Instantiate a Curve25519 public key from an unpadded base64","Try to create a <code>Ed25519SecretKey</code> from a base64 encoded …","Instantiate a Ed25519PublicKey public key from an unpadded …","","","Try to create a <code>Curve25519PublicKey</code> from a slice of bytes.","Try to create a <code>Ed25519SecretKey</code> from a slice of bytes.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","An implementation of the Megolm ratchet.","","","","Create a new random <code>Ed25519SecretKey</code>.","An implementation of the Olm ratchet.","","Get the public key that matches this <code>Ed25519SecretKey</code>.","User-friendly key verification using short authentication …","","","","","Sign the given slice of bytes with this <code>Ed25519SecretKey</code>.","","","","","","Serialize a Curve25519 public key to an unpadded base64 …","Convert the secret key to a base64 encoded string.","","","","Convert this public key to a byte array.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Verify that the provided signature for a given message has …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A Megolm group session represents a single sending …","","","","","","","","","","","","","","An encrypted Megolm message.","","","","","","","","","Permanently advance the session to the given index.","","","Access the serialized content as a string slice.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The actual ciphertext of the message.","","","","","","","","","","","","","","","","","Encrypt the <code>plaintext</code> with the group session.","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Try to decode the given string as a <code>MegolmMessage</code>.","Try to decode the given byte slice as a <code>MegolmMessage</code>.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The index of the message that was used when the message …","Return the current message index.","","","Construct a new group session, with a random ratchet state …","","Convert the group session into a struct which implements …","","Pickle the group session and serialize it to a JSON string.","","","","","","","Returns the globally unique session ID, in base64-encoded …","","Export the group session into a session key.","","","","","Encode the <code>MegolmMessage</code> as a string.","Encode the <code>MegolmMessage</code> as an array of bytes.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert the pickle format back into a <code>GroupSession</code>.","Try to convert the serialized JSON string back into a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An Olm account manages all cryptographic keys used on a …","","","","","","","","Struct holding the two public identity keys of an <code>Account</code>.","Return type for the creation of inbound <code>Session</code> objects.","","","","An encrypted Olm message.","An enum over the two supported message types.","","A normal message, contains only the ciphertext and …","The normal message type.","Enum over the different Olm message types.","A pre-key message, contains metadata to establish a <code>Session</code>…","The pre-key message type.","An encrypted Olm pre-key message.","An Olm session represents one end of an encrypted …","A format suitable for serialization which implements …","","","","","Access the serialized content as a string slice.","Access the serialized content as a string slice.","The base key, a single use key that was created just in …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The index of the chain that was used when the message was …","The actual ciphertext of the message.","","","","","","","","","","","Create a <code>Session</code> from the given pre-key message and …","Create a <code>Session</code> with the given identity key and one-time …","The curve25519 key, used for to establish shared secrets.","Get a reference to the account’s public Curve25519 key","Get a reference to the account’s public Curve25519 key …","Try to decrypt an Olm message, which will either return …","","","","","","","","","","","","","","The ed25519 key, used for signing.","Get a reference to the account’s public Ed25519 key","Get a reference to the account’s public Ed25519 key as …","Encrypt the <code>plaintext</code> and construct an <code>OlmMessage</code>.","","","","","","Get the currently unpublished fallback key.","","","","","","","","","","","","","","The <code>Account</code> stores at most two private parts of the …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Try to decode the given string as a Olm <code>Message</code>.","Try to decode the given string as a Olm <code>PreKeyMessage</code>.","Try to decode the given byte slice as a Olm <code>Message</code>.","Try to decode the given byte slice as a Olm <code>Message</code>.","Create an <code>Account</code> object by unpickling an account pickle …","Create a <code>Session</code> object by unpickling a session pickle in …","Create a <code>OlmMessage</code> from a message type and a ciphertext.","Generate a single new fallback key.","Generates the supplied number of one time keys.","The long term identity key of the sender of the message. …","Get the IdentityKeys of this Account","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Mark all currently unpublished one-time and fallback keys …","Get the maximum number of one-time keys the client should …","The actual message that contains the ciphertext.","Get the message as a byte array.","Get the type of the message.","","","","","Create a new Account with new random identity keys.","The single-use key that was uploaded to a public key …","Get the currently unpublished one-time keys.","Get the currently unpublished one-time keys in …","Convert the account into a struct which implements …","Convert the session into a struct which implements …","Pickle the Olm account and serialize it to a JSON string.","Pickle the session and serialize it to a JSON string.","The plaintext of the pre-key message.","The public part of the ratchet key, that was used when the …","Remove a one-time key that has previously been published …","","","","","","","The <code>Session</code> that was created from a pre-key message.","Returns the globally unique session ID, in base64-encoded …","Sign the given message using our Ed25519 fingerprint key.","","","Encode the <code>Message</code> as a string.","Encode the <code>PreKeyMessage</code> as a string.","Encode the <code>Message</code> as an array of bytes.","Encode the <code>PreKeyMessage</code> as an array of bytes.","","","","","","Convert the <code>OlmMessage</code> into a message type, and base64 …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert the pickle format back into an <code>Account</code>.","Try to convert the serialized JSON string back into an …","Convert the pickle format back into a <code>Session</code>.","Try to convert the serialized JSON string back into a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","A struct representing a short auth string verification …","Error type for the case when we try to generate too many …","The output type for the SAS MAC calculation.","The MAC failed to be validated.","A struct representing a short auth string verification …","Bytes generated from an shared secret that can be used as …","Error type describing failures that can happen during the …","Get the byte slice of the MAC.","Get the raw bytes of the short auth string that can be …","","","","","","","","","","","","","Generate <code>SasBytes</code> using HKDF with the shared secret as the …","Generate the given number of bytes using HKDF with the …","Calculate a MAC for the given input using the info string …","Calculate a MAC for the given input using the info string …","","","","","Get the three decimal numbers that can be presented to …","","Establishes a SAS secret by performing a DH handshake with …","Establishes a SAS secret by performing a DH handshake with …","Get the index of 7 emojis that can be presented to users …","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Create a new <code>Mac</code> object from a base64 encoded string.","Create a new <code>Mac</code> object from a byte slice.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Create a new random verification object","Get the public key that was created by us, that was used …","Get the public key that can be used to establish a shared …","Get the public key as a base64 encoded string.","","Get the public key that was created by the other party, …","Convert the MAC to a base64 encoded string.","","","","","","","","","","","","","","","","","","","","","","","Verify a MAC that was previously created using the …","","","","","","",""],"i":[1,2,3,4,0,2,0,2,0,0,0,3,4,3,2,3,0,0,5,6,7,0,3,3,2,3,4,3,2,1,4,3,0,2,6,8,7,5,6,1,8,7,9,4,2,3,5,6,1,8,7,9,4,2,3,6,7,9,6,7,9,9,8,6,8,7,9,6,7,9,6,1,1,7,9,4,4,2,2,3,3,5,6,6,6,6,6,1,1,1,8,7,9,4,4,4,2,2,2,3,3,3,3,3,5,6,8,7,6,5,6,8,7,6,9,5,6,1,8,7,9,4,2,3,0,6,7,9,8,0,9,8,0,6,8,7,9,8,1,4,2,3,5,6,8,7,9,5,6,6,7,9,1,4,2,3,6,5,6,1,8,7,9,4,2,3,5,6,1,8,7,9,4,2,3,5,6,1,8,7,9,4,2,3,7,5,6,1,8,7,9,4,2,3,10,11,12,13,14,15,16,17,12,14,18,19,20,21,22,23,24,25,21,26,27,28,29,30,31,32,33,0,0,0,0,0,0,0,0,0,0,0,33,32,32,33,31,32,0,30,30,0,0,30,33,33,30,34,35,36,35,28,36,29,37,38,39,35,31,30,33,34,40,28,41,36,32,29,37,38,39,35,31,30,33,34,40,28,41,36,32,29,37,40,40,34,38,35,36,37,38,39,34,28,41,35,28,36,29,38,40,34,34,35,31,31,30,30,33,33,40,36,32,32,37,38,39,35,31,31,30,30,30,30,30,33,33,33,33,33,34,34,40,28,41,36,32,32,29,37,37,34,34,37,38,39,35,31,30,33,34,40,28,41,36,32,29,37,38,40,40,38,34,38,34,38,34,40,37,39,28,41,38,34,38,31,30,33,32,37,37,40,31,30,33,32,37,37,37,37,38,38,39,35,31,30,33,34,34,40,28,41,36,32,29,37,38,39,35,31,30,33,34,40,28,41,36,32,29,37,38,39,35,31,30,33,34,40,28,41,36,32,29,39,35,41,36,34,37,38,39,35,31,30,33,34,40,28,41,36,32,29,35,28,36,29,42,43,44,45,46,45,47,48,49,50,51,52,53,54,55,56,57,53,0,0,0,0,58,59,58,0,0,0,58,58,59,0,0,58,60,61,0,60,61,0,0,0,0,58,62,63,62,63,64,65,66,67,68,62,59,69,64,60,61,58,70,71,63,65,66,67,68,62,59,69,64,60,61,58,70,71,63,69,69,65,69,64,60,61,65,69,64,60,61,67,67,65,67,67,70,67,62,63,65,67,68,69,64,60,70,71,62,63,65,67,67,70,65,69,64,60,61,67,65,66,62,59,59,69,64,60,61,58,58,70,63,67,65,66,67,68,62,59,59,69,64,60,60,60,61,58,58,58,58,58,70,70,71,63,69,64,69,64,67,70,60,67,67,64,67,65,66,67,68,62,59,69,64,60,61,58,70,71,63,67,67,64,60,60,65,69,64,60,67,64,67,67,67,70,67,70,66,69,67,65,68,69,64,60,71,66,70,67,59,58,69,64,69,64,65,69,64,60,61,60,59,58,65,66,67,67,68,62,59,69,69,69,69,64,64,64,64,60,61,61,58,70,71,63,65,66,67,68,62,59,69,64,60,61,58,70,71,63,65,66,67,68,62,59,69,64,60,61,58,70,71,63,68,62,71,63,65,66,67,68,62,59,69,64,60,61,58,70,71,63,62,63,72,73,74,75,76,77,78,79,78,80,81,0,0,0,82,0,0,0,83,84,83,85,86,87,82,84,83,85,86,87,82,84,86,86,86,86,87,84,87,84,84,85,85,85,84,84,86,87,87,82,82,84,83,85,86,87,82,82,84,83,83,83,85,86,87,82,84,84,85,86,85,85,82,86,83,87,84,87,82,83,85,86,87,82,84,83,85,86,87,82,84,83,85,86,87,82,84,86,83,85,86,87,82,84,88],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["curve25519publickey",3]],[[["",0]],["ed25519publickey",3]],[[["",0]],["keyid",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["keyid",3]],["ordering",4]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0],["curve25519publickey",3]],["bool",0]],[[["",0],["ed25519publickey",3]],["bool",0]],[[["",0],["keyid",3]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[["curve25519secretkey",3]],["curve25519publickey",3]],[[],["curve25519publickey",3]],[[["ephemeralsecret",3]],["curve25519publickey",3]],[[]],[[["reusablesecret",3]],["curve25519publickey",3]],[[["decodeerror",4]]],[[["signatureerror",6]]],[[]],[[]],[[]],[[]],[[["signatureerror",4]]],[[["decodeerror",4]]],[[]],[[["keyerror",4]]],[[]],[[["decodeerror",4]]],[[["keyerror",4]]],[[["decodeerror",4]]],[[]],[[["signatureerror",4]]],[[["decodeerror",3]]],[[["str",0]],["result",4,[["signatureerror",4]]]],[[["str",0]],["result",4,[["curve25519publickey",3],["keyerror",4]]]],[[["str",0]],["result",4,[["keyerror",4]]]],[[["str",0]],["result",4,[["keyerror",4]]]],[[]],[[],["result",4,[["signatureerror",4]]]],[[],["result",4,[["curve25519publickey",3],["keyerror",4]]]],[[],["result",4,[["keyerror",4]]]],[[],["result",4,[["keyerror",4]]]],[[["",0],["",0]]],[[["",0],["",0]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["",0],["curve25519publickey",3]],["bool",0]],[[["",0],["ed25519publickey",3]],["bool",0]],[[["",0],["keyid",3]],["bool",0]],[[]],null,[[["",0],["keyid",3]],["option",4,[["ordering",4]]]],[[["",0]],["ed25519publickey",3]],null,[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["ed25519signature",3]],[[["",0]],["option",4,[["error",8]]]],[[["",0]],["option",4,[["error",8]]]],[[["",0]],["option",4,[["error",8]]]],[[["",0]],["option",4,[["error",8]]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[],["string",3]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["vec",3,[["u8",0]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0],["ed25519signature",3]],["result",4,[["signatureerror",4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0],["u32",0]],["bool",0]],[[["",0]],["str",0]],[[["",0]],["str",0]],[[["",0]],["str",0]],[[["",0]],["str",0]],[[["",0]],["str",0]],[[["",0]],["strdecryptedmessage",3]],[[["",0],["",0]]],[[["",0],["megolmmessage",3]],["result",4,[["decryptedmessage",3],["decryptionerror",4]]]],[[]],[[["",0]]],[[["",0]]],[[["deserializer",8]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0],["str",0]],["megolmmessage",3]],[[["",0],["decryptedmessage",3]],["bool",0]],[[["",0],["u32",0]],["option",4,[["exportedsessionkey",3]]]],[[["",0]],["u32",0]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["error",3]]],[[]],[[["keyerror",4]]],[[["signatureerror",4]]],[[["decodeerror",4]]],[[["error",3]]],[[]],[[["signatureerror",4]]],[[["blockmodeerror",3]]],[[["macerror",3]]],[[["decodeerror",4]]],[[]],[[["groupsession",3]]],[[]],[[]],[[]],[[]],[[]],[[["error",3]]],[[]],[[]],[[["str",0]],["result",4,[["decodeerror",4]]]],[[["vec",3,[["u8",0]]]],["result",4,[["decodeerror",4]]]],[[["str",0],["str",0]],["result",4,[["libolmunpickleerror",4]]]],[[["exportedsessionkey",3]],["result",4,[["sessioncreationerror",4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]],["u32",0]],[[["",0]],["u32",0]],null,[[["",0],["decryptedmessage",3]],["bool",0]],[[]],[[["sessionkey",3]],["result",4,[["sessioncreationerror",4]]]],[[["",0]],["groupsessionpickle",3]],[[["",0]],["inboundgroupsessionpickle",3]],[[["",0]],["groupsessionpickledjson",3]],[[["",0]],["inboundgroupsessionpickledjson",3]],null,[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["str",0]],[[["",0]],["string",3]],[[["",0]],["sessionkey",3]],[[["",0]],["option",4,[["error",8]]]],[[["",0]],["option",4,[["error",8]]]],[[["",0]],["option",4,[["error",8]]]],[[["",0]],["option",4,[["error",8]]]],[[["",0]],["string",3]],[[["",0]],["vec",3,[["u8",0]]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["vec",3,[["u8",0]]]],["result",4]],[[["str",0]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["groupsessionpickle",3]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["inboundgroupsessionpickle",3]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[],["result",4,[["groupsession",3],["groupsessionunpicklingerror",4]]]],[[],["result",4,[["groupsession",3],["groupsessionunpicklingerror",4]]]],[[],["result",4,[["inboundgroupsession",3],["inboundgroupsessionunpicklingerror",4]]]],[[],["result",4,[["inboundgroupsession",3],["inboundgroupsessionunpicklingerror",4]]]],[[["str",0]],["result",4,[["inboundgroupsessionunpicklingerror",4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["str",0]],[[["",0]],["str",0]],[[["",0]],["str",0]],[[["",0]],["str",0]],[[["",0]],["curve25519publickeyu64",0]],[[["",0]]],[[["",0]],["identitykeys",3]],[[["",0]],["message",3]],[[["",0]],["prekeymessage",3]],[[["",0]],["olmmessage",4]],[[["",0]],["messagetype",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["curve25519publickey",3],["prekeymessage",3]],["result",4,[["inboundcreationresult",3],["sessioncreationerror",4]]]],[[["",0],["curve25519publickey",3],["curve25519publickey",3]],["session",3]],null,[[["",0]],["curve25519publickey",3]],[[["",0]],["str",0]],[[["",0],["olmmessage",4]],["result",4,[["string",3],["decryptionerror",4]]]],[[]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["deserializer",8]],["result",4]],[[["deserializer",8]],["result",4]],[[["deserializer",8]],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]]],[[["",0]]],null,[[["",0]],["ed25519publickey",3]],[[["",0]],["str",0]],[[["",0],["str",0]],["olmmessage",4]],[[["",0],["identitykeys",3]],["bool",0]],[[["",0],["message",3]],["bool",0]],[[["",0],["prekeymessage",3]],["bool",0]],[[["",0],["olmmessage",4]],["bool",0]],[[["",0],["messagetype",4]],["bool",0]],[[["",0]],["hashmap",3,[["keyid",3],["string",3]]]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0]],["bool",0]],[[]],[[]],[[]],[[]],[[]],[[["error",3]]],[[]],[[]],[[]],[[["prekeymessage",3]]],[[["message",3]]],[[]],[[]],[[["blockmodeerror",3]]],[[["macerror",3]]],[[["decodeerror",4]]],[[["decodeerror",4]]],[[]],[[["sessionpickle",3]]],[[]],[[]],[[]],[[["str",0]],["result",4,[["decodeerror",4]]]],[[["str",0]],["result",4,[["decodeerror",4]]]],[[],["result",4,[["decodeerror",4]]]],[[],["result",4,[["decodeerror",4]]]],[[["str",0],["str",0]],["result",4,[["libolmunpickleerror",4]]]],[[["str",0],["str",0]],["result",4,[["libolmunpickleerror",4]]]],[[["usize",0],["str",0]],["result",4,[["decodeerror",4]]]],[[["",0]]],[[["",0],["usize",0]]],[[["",0]],["curve25519publickey",3]],[[["",0]],["identitykeys",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]]],[[["",0]],["usize",0]],[[["",0]],["message",3]],[[["",0]]],[[["",0]],["messagetype",4]],[[["",0],["identitykeys",3]],["bool",0]],[[["",0],["message",3]],["bool",0]],[[["",0],["prekeymessage",3]],["bool",0]],[[["",0],["olmmessage",4]],["bool",0]],[[]],[[["",0]],["curve25519publickey",3]],[[["",0]],["hashmap",3,[["keyid",3],["curve25519publickey",3]]]],[[["",0]],["hashmap",3,[["string",3],["string",3]]]],[[["",0]],["accountpickle",3]],[[["",0]],["sessionpickle",3]],[[["",0]],["accountpickledjson",3]],[[["",0]],["sessionpickledjson",3]],null,[[["",0]],["curve25519publickey",3]],[[["",0],["curve25519publickey",3]],["option",4,[["curve25519secretkey",3]]]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],null,[[["",0]],["string",3]],[[["",0],["str",0]],["string",3]],[[["",0]],["option",4,[["error",8]]]],[[["",0]],["option",4,[["error",8]]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["vec",3,[["u8",0]]]],[[["",0]],["vec",3,[["u8",0]]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["accountpickle",3]],["result",4,[["accountunpicklingerror",4]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",0]],["result",4]],[[["vec",3,[["u8",0]]]],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",0]],["result",4]],[[["vec",3,[["u8",0]]]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["usize",0]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[],["result",4,[["account",3],["accountunpicklingerror",4]]]],[[],["result",4,[["account",3],["accountunpicklingerror",4]]]],[[],["session",3]],[[],["result",4,[["session",3],["sessionunpicklingerror",4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]]],[[["",0]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]]],[[["",0]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0],["str",0]],["sasbytes",3]],[[["",0],["str",0],["usize",0]],["result",4,[["vec",3,[["u8",0]]],["invalidcount",3]]]],[[["",0],["str",0],["str",0]],["mac",3]],[[["",0],["str",0],["str",0]],["string",3]],[[["",0]],["invalidcount",3]],[[["",0]],["sasbytes",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0]]],[[]],[[["curve25519publickey",3]],["result",4,[["establishedsas",3],["keyerror",4]]]],[[["str",0]],["result",4,[["establishedsas",3],["keyerror",4]]]],[[["",0]]],[[["",0],["sasbytes",3]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[["macerror",3]]],[[]],[[["str",0]],["result",4,[["decodeerror",4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0],["sasbytes",3]],["bool",0]],[[]],[[["",0]],["curve25519publickey",3]],[[["",0]],["curve25519publickey",3]],[[["",0]],["str",0]],[[["",0]],["option",4,[["error",8]]]],[[["",0]],["curve25519publickey",3]],[[["",0]],["string",3]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0],["str",0],["str",0],["mac",3]],["result",4,[["saserror",4]]]],[[]],[[]],[[]],[[]],[[]],[[]],null],"p":[[4,"SignatureError"],[4,"LibolmUnpickleError"],[4,"DecodeError"],[4,"KeyError"],[3,"Ed25519Signature"],[3,"Curve25519PublicKey"],[3,"Ed25519PublicKey"],[3,"Ed25519SecretKey"],[3,"KeyId"],[13,"MessageType"],[13,"MessageTooShort"],[13,"InvalidVersion"],[13,"InvalidKey"],[13,"InvalidMacLength"],[13,"Signature"],[13,"ProtoBufError"],[13,"Base64"],[13,"Base64Error"],[13,"InvalidKeyLength"],[13,"Signature"],[13,"Version"],[13,"Base64"],[13,"Decryption"],[13,"PublicKey"],[13,"Decode"],[13,"Base64"],[13,"Signature"],[3,"ExportedSessionKey"],[3,"SessionKey"],[4,"SessionCreationError"],[4,"GroupSessionUnpicklingError"],[4,"InboundGroupSessionUnpicklingError"],[4,"DecryptionError"],[3,"InboundGroupSession"],[3,"GroupSessionPickledJSON"],[3,"InboundGroupSessionPickledJSON"],[3,"MegolmMessage"],[3,"GroupSession"],[3,"GroupSessionPickle"],[3,"DecryptedMessage"],[3,"InboundGroupSessionPickle"],[13,"Signature"],[13,"InvalidMAC"],[13,"InvalidCiphertext"],[13,"UnknownMessageIndex"],[13,"DecodeError"],[13,"InvalidRatchet"],[13,"CorruptedPickle"],[13,"InvalidInitialRatchet"],[13,"InvalidLatestRatchet"],[13,"InvalidSigningPublicKey"],[13,"CorruptedPickle"],[13,"Version"],[13,"Read"],[13,"Base64"],[13,"Signature"],[13,"PublicKey"],[4,"DecryptionError"],[4,"AccountUnpicklingError"],[4,"OlmMessage"],[4,"MessageType"],[3,"AccountPickledJSON"],[3,"SessionPickledJSON"],[3,"PreKeyMessage"],[3,"IdentityKeys"],[3,"InboundCreationResult"],[3,"Account"],[3,"AccountPickle"],[3,"Message"],[3,"Session"],[3,"SessionPickle"],[13,"InvalidSigningKey"],[13,"CorruptedPickle"],[13,"Base64"],[13,"InvalidMAC"],[13,"InvalidCiphertext"],[13,"MissingMessageKey"],[13,"TooBigMessageGap"],[13,"DecodeError"],[13,"Normal"],[13,"PreKey"],[4,"SasError"],[3,"Mac"],[3,"SasBytes"],[3,"Sas"],[3,"EstablishedSas"],[3,"InvalidCount"],[13,"Mac"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};