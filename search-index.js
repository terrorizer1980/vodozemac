var searchIndex = JSON.parse('{\
"vodozemac":{"doc":"Build Status codecov License Docs - Main Docs - Stable","t":[13,13,4,3,4,13,3,13,13,13,13,13,13,18,18,4,13,13,13,13,13,6,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,13,4,3,3,3,3,13,13,13,4,3,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,3,3,13,13,4,3,13,13,13,13,4,13,3,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,13,3,3,13,13,13,4,3,3,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12],"n":["Base64","Base64Error","Curve25519KeyError","Curve25519PublicKey","DecodeError","Decryption","Ed25519PublicKey","InvalidKey","InvalidKeyLength","InvalidMacLength","InvalidSession","InvalidSize","InvalidVersion","KEY_LENGTH","LENGTH","LibolmUnpickleError","MessageTooShort","MissingVersion","ProtoBufError","PublicKey","Signature","SignatureError","Version","as_bytes","as_bytes","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","deserialize","deserialize","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_base64","from_bytes","from_bytes","from_slice","hash","into","into","into","into","into","megolm","ne","new","olm","sas","serialize","serialize","source","source","source","to_base64","to_base64","to_bytes","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","verify","vzip","vzip","vzip","vzip","vzip","0","0","0","0","0","0","0","0","1","1","0","0","0","0","0","1","0","0","Base64","Base64","DecodeError","DecryptionError","ExportedSessionKey","GroupSession","GroupSessionPickledJSON","InboundGroupSession","InvalidCiphertext","InvalidMAC","Read","SessionCreationError","SessionKey","Signature","Signature","UnknownMessageIndex","Version","as_ref","as_str","as_str","as_str","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","decrypt","default","deref","deserialize","deserialize","drop","drop","drop","encrypt","export_at","first_known_index","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_libolm_pickle","import","into","into","into","into","into","into","into","message_index","new","new","pickle","pickle","pickle_to_json_string","pickle_to_json_string","session_id","session_id","session_key","source","source","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unpickle","unpickle_from_json_str","vzip","vzip","vzip","vzip","vzip","vzip","vzip","zeroize","zeroize","zeroize","0","0","0","0","0","0","1","0","0","0","0","1","Account","AccountPickledJSON","Base64","DecodeError","DecryptionError","InboundCreationResult","InvalidCiphertext","InvalidMAC","MissingMessageKey","Normal","OlmMessage","PreKey","Session","SessionPickledJSON","TooBigMessageGap","as_ref","as_ref","as_str","as_str","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","ciphertext","clone","clone_into","create_inbound_session","create_outbound_session","curve25519_key","curve25519_key_encoded","decrypt","default","deref","deref","deserialize","deserialize","drop","drop","ed25519_key","ed25519_key_encoded","encrypt","eq","fallback_key","fmt","fmt","fmt","fmt","fmt","fmt","fmt","forget_fallback_key","from","from","from","from","from","from","from","from","from","from","from","from_libolm_pickle","from_libolm_pickle","from_type_and_ciphertext","generate_fallback_key","generate_one_time_keys","into","into","into","into","into","into","into","mark_keys_as_published","max_number_of_one_time_keys","message_type","ne","new","one_time_keys","one_time_keys_encoded","pickle","pickle","pickle_to_json_string","pickle_to_json_string","plaintext","session","session_id","sign","source","to_owned","to_string","to_tuple","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unpickle","unpickle","vzip","vzip","vzip","vzip","vzip","vzip","vzip","zeroize","zeroize","0","0","0","0","0","0","1","0","0","Base64","EstablishedSas","InvalidCount","Mac","NonContributoryKey","PublicKey","PublicKeyError","Sas","SasBytes","SasError","as_bytes","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes","bytes_raw","calculate_mac","clone","clone","clone_into","clone_into","decimals","default","diffie_hellman","diffie_hellman_with_raw","emoji_indices","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","ne","new","public_key","public_key_encoded","source","source","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","verify_mac","vzip","vzip","vzip","vzip","vzip","vzip","0","0","0"],"q":["vodozemac","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","vodozemac::Curve25519KeyError","","vodozemac::DecodeError","","","","","","","","vodozemac::LibolmUnpickleError","","","","","","vodozemac::megolm","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","vodozemac::megolm::DecryptionError","","","","","","","vodozemac::megolm::SessionCreationError","","","","","vodozemac::olm","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","vodozemac::olm::DecryptionError","","","","","","","vodozemac::olm::OlmMessage","","vodozemac::sas","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","vodozemac::sas::PublicKeyError","vodozemac::sas::SasError",""],"d":["","","","","","","","","","","","","","","","","","","","","","Errors which may occur while processing signatures and …","","View this public key as a byte array.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Instantiate a Curve25519 public key from an unpadded base64","","","Try to create a <code>Curve25519PublicKey</code> from a slice of bytes.","","","","","","","An implementation of the Megolm ratchet.","","","An implementation of the Olm ratchet.","User-friendly key verification using short authentication …","","","","","","Serialize a Curve25519 public key to an unpadded base64 …","","Convert this public key to a byte array.","","","","","","","","","","","","","","","","","","","","","","Verify that the provided signature for a given message has …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A Megolm group session represents a single sending …","","","","","","","","","","","","","Access the serialized content as a string slice.","","","","","","","","","","","","","","","","","","","","","","","","","Encrypt the <code>plaintext</code> with the group session.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return the current message index.","Construct a new group session, with a random ratchet state …","","Convert the group session into a struct which implements …","","Pickle the group session and serialize it to a JSON string.","","Returns the globally unique session ID, in base64-encoded …","","Export the group session into a session key.","","","","","","","","","","","","","","","","","","","","","","","","","","Try to convert the serialized JSON string back into a …","","","","","","","","","","","","","","","","","","","","","","","","An Olm account manages all cryptographic keys used on a …","","","","","Return type for the creation of inbound <code>Session</code> objects.","","","","","","","An Olm session represents one end of an encrypted …","","","","","Access the serialized content as a string slice.","Access the serialized content as a string slice.","","","","","","","","","","","","","","","","","","Create a <code>Session</code> from the given pre-key message and …","Create a <code>Session</code> with the given identity key and one-time …","Get a reference to the account’s public Curve25519 key","Get a reference to the account’s public Curve25519 key …","Try to decrypt an Olm message, which will either return …","","","","","","","","Get a reference to the account’s public Ed25519 key","Get a reference to the account’s public Ed25519 key as …","Encrypt the <code>plaintext</code> and construct an <code>OlmMessage</code>.","","Get the currently unpublished fallback key.","","","","","","","","The <code>Account</code> stores at most two private parts of the …","","","","","","","","","","","","Create an <code>Account</code> object by unpickling an account pickle …","Create a <code>Session</code> object by unpickling a session pickle in …","","Generate a single new fallback key.","Generates the supplied number of one time keys.","","","","","","","","Mark all currently unpublished one-time and fallback keys …","","","","Create a new Account with new random identity keys.","Get the currently unpublished one-time keys.","Get the currently unpublished one-time keys in …","Convert the account into a struct which implements …","Convert the session into a struct which implements …","Pickle the Olm account and serialize it to a JSON string.","Pickle the session and serialize it to a JSON string.","The plaintext of the pre-key message.","The <code>Session</code> that was created from a pre-key message.","Returns the globally unique session ID, in base64-encoded …","Sign the given message using our Ed25519 fingerprint key.","","","","","","","","","","","","","","","","","","","","","","","","","","Try to convert the serialized JSON string back into an …","Try to convert the serialized JSON string back into a …","","","","","","","","","","","","","","","","","","","The MAC code that was given wasn’t valid base64.","A struct representing a short auth string verification …","Error type for the case when we try to generate too many …","The MAC failed to be validated.","At least one of the keys did not have contributory …","The given public curve25519 key wasn’t valid.","Error type describing failures that can happen when we try …","A struct representing a short auth string verification …","Bytes generated from an shared secret that can be used as …","Error type describing failures that can happen during the …","Get the raw bytes of the short auth string that can be …","","","","","","","","","","","","","Generate <code>SasBytes</code> using HKDF with the shared secret as the …","Generate the given number  of bytes using HKDF with the …","Calculate a MAC for the given input using the info string …","","","","","Get the three decimal numbers that can be presented to …","","Establishes a SAS secret by performing a DH handshake with …","Establishes a SAS secret by performing a DH handshake with …","Get the index of 7 emojis that can be presented to users …","","","","","","","","","","","","","","","","","","","","","","","","","Create a new random verification object","Get the public key that can be used to establish a shared …","Get the public key as a base64 encoded string.","","","","","","","","","","","","","","","","","","","","","","","","","","Verify a MAC that was previously created using the …","","","","","","","","",""],"i":[1,2,0,0,0,1,0,3,2,3,1,1,3,4,5,0,3,3,3,1,3,0,1,4,5,4,2,5,1,3,4,2,5,1,3,4,2,5,4,2,5,4,5,4,4,2,2,1,1,3,3,4,4,4,4,4,2,2,5,1,1,1,1,3,3,3,3,4,4,5,4,4,4,2,5,1,3,0,4,4,0,0,4,5,2,1,3,4,5,4,4,2,5,2,1,3,4,2,5,1,3,4,2,5,1,3,4,2,5,1,3,5,4,2,5,1,3,6,7,8,9,10,11,12,13,9,11,14,15,16,17,18,14,19,20,21,22,22,0,0,0,0,0,22,22,21,0,0,21,22,22,21,23,23,19,20,24,23,21,22,25,19,20,24,23,21,22,25,19,20,25,24,23,24,25,23,19,20,24,25,25,23,21,21,22,22,24,23,21,21,21,21,22,22,22,22,22,22,25,19,20,25,25,24,23,21,22,25,19,20,24,24,25,24,25,24,25,24,25,24,21,22,21,22,24,23,21,22,25,19,20,24,23,21,22,25,19,20,24,23,21,22,25,19,20,23,25,24,23,21,22,25,19,20,23,19,20,26,27,28,29,30,31,30,32,33,34,35,32,0,0,36,36,0,0,36,36,36,37,0,37,0,0,36,38,39,38,39,40,41,38,37,36,42,39,40,41,38,37,36,42,39,37,37,37,41,41,41,41,42,41,38,39,41,42,38,39,41,41,42,37,41,40,38,37,36,36,42,39,41,40,41,38,37,36,36,36,36,36,42,39,41,42,37,41,41,40,41,38,37,36,42,39,41,41,37,37,41,41,41,41,42,41,42,40,40,42,41,36,37,36,37,40,41,38,37,36,42,39,40,41,38,37,36,42,39,40,41,38,37,36,42,39,38,39,40,41,38,37,36,42,39,38,39,43,44,45,46,47,48,47,49,50,51,0,0,51,52,52,0,0,0,0,53,54,55,56,51,52,53,54,55,56,51,52,53,55,55,55,56,53,56,53,53,54,54,54,53,53,56,56,51,51,52,52,53,54,55,56,51,51,51,52,52,53,54,55,56,51,52,53,53,54,54,54,51,52,56,53,56,51,52,54,55,56,51,52,53,54,55,56,51,52,53,54,55,56,51,52,53,55,54,55,56,51,52,53,57,58,59],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["curve25519publickey",3]],[[],["curve25519keyerror",4]],[[],["ed25519publickey",3]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[["curve25519publickey",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["reusablesecret",3]],["curve25519publickey",3]],[[["ephemeralsecret",3]],["curve25519publickey",3]],[[["curve25519secretkey",3]],["curve25519publickey",3]],[[]],[[],["curve25519publickey",3]],[[["decodeerror",4]]],[[]],[[]],[[["decodeerror",4]]],[[["error",3]]],[[["signatureerror",6]]],[[]],[[["signatureerror",6]]],[[["curve25519keyerror",4]]],[[["decodeerror",3]]],[[]],[[["str",15]],["result",4,[["curve25519publickey",3],["curve25519keyerror",4]]]],[[]],[[],["result",4,[["signatureerror",6]]]],[[],["result",4,[["curve25519publickey",3],["curve25519keyerror",4]]]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["curve25519publickey",3]],["bool",15]],[[],["curve25519publickey",3]],null,null,[[],["result",4]],[[],["result",4]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[],["string",3]],[[],["string",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["ed25519signature",3]],["result",4,[["signatureerror",6]]]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["str",15]],["result",4,[["decryptedmessage",3],["decryptionerror",4]]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[]],[[]],[[]],[[["str",15]],["string",3]],[[["u32",15]],["option",4,[["exportedsessionkey",3]]]],[[],["u32",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["error",3]]],[[["signatureerror",6]]],[[["decodeerror",4]]],[[]],[[["decodeerror",4]]],[[["blockmodeerror",3]]],[[["macerror",3]]],[[]],[[["signatureerror",6]]],[[["decodeerror",4]]],[[]],[[]],[[]],[[["str",15],["str",15]],["result",4,[["libolmunpickleerror",4]]]],[[["exportedsessionkey",3]],["result",4,[["sessioncreationerror",4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["u32",15]],[[]],[[["sessionkey",3]],["result",4,[["sessioncreationerror",4]]]],[[],["groupsessionpickle",3]],[[],["inboundgroupsessionpickle",3]],[[],["groupsessionpickledjson",3]],[[],["inboundgroupsessionpickledjson",3]],[[],["str",15]],[[],["string",3]],[[],["sessionkey",3]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["result",4,[["groupsession",3],["groupsessionunpicklingerror",4]]]],[[["str",15]],["result",4,[["inboundgroupsessionunpicklingerror",4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["str",15]],[[],["olmmessage",4]],[[]],[[["curve25519publickey",3],["prekeymessage",3]],["result",4,[["inboundcreationresult",3],["sessioncreationerror",4]]]],[[["curve25519publickey",3],["curve25519publickey",3]],["session",3]],[[],["curve25519publickey",3]],[[],["str",15]],[[["olmmessage",4]],["result",4,[["string",3],["decryptionerror",4]]]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[]],[[]],[[],["ed25519publickey",3]],[[],["str",15]],[[["str",15]],["olmmessage",4]],[[["olmmessage",4]],["bool",15]],[[],["hashmap",3,[["keyid",3],["string",3]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[["decodeerror",4]]],[[["blockmodeerror",3]]],[[["decodeerror",4]]],[[["macerror",3]]],[[]],[[]],[[["str",15],["str",15]],["result",4,[["libolmunpickleerror",4]]]],[[["str",15],["str",15]],["result",4,[["libolmunpickleerror",4]]]],[[["usize",15],["string",3]],["result",4]],[[]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["messagetype",4]],[[["olmmessage",4]],["bool",15]],[[]],[[],["hashmap",3,[["keyid",3],["curve25519publickey",3]]]],[[],["hashmap",3,[["string",3],["string",3]]]],[[],["accountpickle",3]],[[],["sessionpickle",3]],[[],["accountpickledjson",3]],[[],["sessionpickledjson",3]],null,null,[[],["string",3]],[[["str",15]],["string",3]],[[],["option",4,[["error",8]]]],[[]],[[],["string",3]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["result",4,[["account",3],["accountunpicklingerror",4]]]],[[],["result",4,[["session",3],["sessionunpicklingerror",4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["str",15]],["sasbytes",3]],[[["str",15],["usize",15]],["result",4,[["vec",3,[["u8",15]]],["invalidcount",3]]]],[[["str",15],["str",15]],["string",3]],[[],["invalidcount",3]],[[],["sasbytes",3]],[[]],[[]],[[]],[[]],[[["curve25519publickey",3]],["result",4,[["establishedsas",3],["publickeyerror",4]]]],[[["str",15]],["result",4,[["establishedsas",3],["publickeyerror",4]]]],[[]],[[["sasbytes",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["decodeerror",4]]],[[["macerror",3]]],[[["curve25519keyerror",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["sasbytes",3]],["bool",15]],[[]],[[],["curve25519publickey",3]],[[],["str",15]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["str",15],["str",15],["str",15]],["result",4,[["saserror",4]]]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null],"p":[[4,"LibolmUnpickleError"],[4,"Curve25519KeyError"],[4,"DecodeError"],[3,"Curve25519PublicKey"],[3,"Ed25519PublicKey"],[13,"Base64Error"],[13,"InvalidKeyLength"],[13,"MessageTooShort"],[13,"InvalidVersion"],[13,"InvalidKey"],[13,"InvalidMacLength"],[13,"Signature"],[13,"ProtoBufError"],[13,"Version"],[13,"InvalidSize"],[13,"Base64"],[13,"Decryption"],[13,"PublicKey"],[3,"ExportedSessionKey"],[3,"SessionKey"],[4,"SessionCreationError"],[4,"DecryptionError"],[3,"GroupSessionPickledJSON"],[3,"GroupSession"],[3,"InboundGroupSession"],[13,"Base64"],[13,"Signature"],[13,"InvalidMAC"],[13,"InvalidCiphertext"],[13,"UnknownMessageIndex"],[13,"DecodeError"],[13,"Version"],[13,"Read"],[13,"Base64"],[13,"Signature"],[4,"DecryptionError"],[4,"OlmMessage"],[3,"AccountPickledJSON"],[3,"SessionPickledJSON"],[3,"InboundCreationResult"],[3,"Account"],[3,"Session"],[13,"Base64"],[13,"InvalidMAC"],[13,"InvalidCiphertext"],[13,"MissingMessageKey"],[13,"TooBigMessageGap"],[13,"DecodeError"],[13,"Normal"],[13,"PreKey"],[4,"SasError"],[4,"PublicKeyError"],[3,"SasBytes"],[3,"Sas"],[3,"EstablishedSas"],[3,"InvalidCount"],[13,"PublicKey"],[13,"Base64"],[13,"Mac"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};